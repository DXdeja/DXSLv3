<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAAAAADoAgAANgAAACAgAAAAAAAAqAgAAB4DAAAQEBAAAAAAACgBAADGCwAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAREREREREREREQAAAAAAABEiId3
        d3d3d3d0QAAAAAAABERERMzMzMzMfEAAAAAAAAAAAEzMzMzMzHxEREQAAAAAAADHd3d3d3h4iIiEQAAA
        AAAEx3iIjMzMfERERAAAAAAABMd8zMREx3xAAAAAAAAAAARHfERERMd0QAAAAAAAAAAATHxMeMTHdEAA
        AAAAAAAAAEx3x3eMx8QAAAAAAAAAAABMd8x4zHfEAAAAAAAAAAAABHfEREx3RAAAAAAAAAAAAATHxETH
        fEAAAAAAAAAEAAAEx8REx3xAAAAAAAAAREAABEd8THd0QAAAAAAAAEdEAABMfMd3xAAAAAAAAARHxAAA
        THx3d8QAAAAAAAAER3QAAETP93xAAAAAAAAABMd0AABM//fEQAAAAAAAAATH/EBEz///xAAAAAAAAAAE
        z/xETP///MQAAAAAAAAABM//zP///8/EAAAAAAAAAATH///////MdEAAAAAAAAAEx3/////8THxAAAAA
        AAAABMd/////xERHRAAAAAAAAATHd////EAARIRAAAAAAAAEx3d//8QAAARIRAAAAAAABMd3d3xAAAAA
        RIQAAAAAAATId3fEAAAAAAREAAAAAAAEyId8QAAAAAAAAAAAAAAABEiIxAAAAAAAAAAAAAAAAARIxAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgAEBAQACAgIAAwMDAAREREAFhYWABwc
        HAAiIiIAKSkpAFVVVQBNTU0AQkJCADk5OQCAfP8AUFD/AJMA1gD/7MwAxtbvANbn5wCQqa0AAAAzAAAA
        ZgAAAJkAAADMAAAzAAAAMzMAADNmAAAzmQAAM8wAADP/AABmAAAAZjMAAGZmAABmmQAAZswAAGb/AACZ
        AAAAmTMAAJlmAACZmQAAmcwAAJn/AADMAAAAzDMAAMxmAADMmQAAzMwAAMz/AAD/ZgAA/5kAAP/MADMA
        AAAzADMAMwBmADMAmQAzAMwAMwD/ADMzAAAzMzMAMzNmADMzmQAzM8wAMzP/ADNmAAAzZjMAM2ZmADNm
        mQAzZswAM2b/ADOZAAAzmTMAM5lmADOZmQAzmcwAM5n/ADPMAAAzzDMAM8xmADPMmQAzzMwAM8z/ADP/
        MwAz/2YAM/+ZADP/zAAz//8AZgAAAGYAMwBmAGYAZgCZAGYAzABmAP8AZjMAAGYzMwBmM2YAZjOZAGYz
        zABmM/8AZmYAAGZmMwBmZmYAZmaZAGZmzABmmQAAZpkzAGaZZgBmmZkAZpnMAGaZ/wBmzAAAZswzAGbM
        mQBmzMwAZsz/AGb/AABm/zMAZv+ZAGb/zADMAP8A/wDMAJmZAACZM5kAmQCZAJkAzACZAAAAmTMzAJkA
        ZgCZM8wAmQD/AJlmAACZZjMAmTNmAJlmmQCZZswAmTP/AJmZMwCZmWYAmZmZAJmZzACZmf8AmcwAAJnM
        MwBmzGYAmcyZAJnMzACZzP8Amf8AAJn/MwCZzGYAmf+ZAJn/zACZ//8AzAAAAJkAMwDMAGYAzACZAMwA
        zACZMwAAzDMzAMwzZgDMM5kAzDPMAMwz/wDMZgAAzGYzAJlmZgDMZpkAzGbMAJlm/wDMmQAAzJkzAMyZ
        ZgDMmZkAzJnMAMyZ/wDMzAAAzMwzAMzMZgDMzJkAzMzMAMzM/wDM/wAAzP8zAJn/ZgDM/5kAzP/MAMz/
        /wDMADMA/wBmAP8AmQDMMwAA/zMzAP8zZgD/M5kA/zPMAP8z/wD/ZgAA/2YzAMxmZgD/ZpkA/2bMAMxm
        /wD/mQAA/5kzAP+ZZgD/mZkA/5nMAP+Z/wD/zAAA/8wzAP/MZgD/zJkA/8zMAP/M/wD//zMAzP9mAP//
        mQD//8wAZmb/AGb/ZgBm//8A/2ZmAP9m/wD//2YAIQClAF9fXwB3d3cAhoaGAJaWlgDLy8sAsrKyANfX
        1wDd3d0A4+PjAOrq6gDx8fEA+Pj4APD7/wCkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP//
        /wAKCgoKCjxfhoaGhoaGhoanp4anp6eGhl8KCgoKCgoKCgoKCgoKPOyS9+/v9+/v7++Skuzs6+vrhjwK
        CgoKCgoKCgoKCgo8X2Zmhqenp4aGhoanp6eGp+uGPAwLCwoKCgoKCgoKCgoKCws8Zoanhqenp6enp6en
        66enhmZfXzwKCgoKCgoKCgoKCjyGB+/v7++S7e3t7M/sz+vr621tPAoKCgoKCgoKCgoKPKcHBwfv95LP
        z6enrZKnhoZfXzw8CgoKCgoKCgoKCgo8hgcHp6enhoZfX4bv94Y8CwoKCgoKCgoKCgoKCgoKCjyGB7yn
        hoaGhoaGhu/3hjwKCgoKCgoKCgoKCgoKCgoKPIbWvM+np/eShoat7++nPAoKCgoKCgoKCgoKCgoKCgoK
        X8+8B6cH7/f3p8/vz4Y8CgoKCgoKCgoKCgoKCgoKCgpfp7wHp6fv762n7++nXwoKCgoKCgoKCgoKCgoK
        CgoKCjyn8LynhoaGp60H96c8CgoKCgoKCgoKCgoKCgoKCgoKCmbP8M+GPF+GBwfPhgoKCgoKCgoKCgoK
        CgoKCgoKCgoKX6fwz4Y8PIa8B62GCgoKCgoKCgoKCgoKCjxmPAoKCgo8hvC8p2aGBwcHhl8KCgoKCgoK
        CgoKCgo8ZgdmPAoKCgqGzwenpwcHvM9mCgoKCgoKCgoKCgoKCjyGB6dfCgoKCjynB9bw8LwHhl8KCgoK
        CgoKCgoKCgoKX6cHvIYLCgoKPKfW8vLx8c9fCgoKCgoKCgoKCgoKCgpfp7zxhjwKCjyGz/T08/HPhjwK
        CgoKCgoKCgoKCgoKCoan8fKnXzxfhq309PT08qdmCgoKCgoKCgoKCgoKCgoKhqfy88+GhqfP8/Pz9PTW
        p18KCgoKCgoKCgoKCgoKCgqGp/Lz9KfP9PT08/PzCfPPhgoKCgoKCgoKCgoKCgoKCoan8fPz9PT09PT0
        8vKtCfGGXwoKCgoKCgoKCgoKCgoKZqe88fP09PT09PTzz6fP8YuGCgoKCgoKCgoKCgoKCgpfpwfw8vP0
        9PT09M+GPGauB4uGCgoKCgoKCgoKCgoKCl+nB7zx8/T09PTPhjwKCoaL7IaGCgoKCgoKCgoKCgoKX6cH
        B7zx8vLyz4Y8CgoKCl+L64aGCgoKCgoKCgoKCgo8p+8HB/Dw8K2GPAoKCgoKCmaG64YKCgoKCgoKCgoK
        CjyGku/vB7zPhjwKCgoKCgoKCl+GQwoKCgoKCgoKCgoKX6fs9+8HrYYMCgoKCgoKCgoKCgoKDgoKCgoK
        CgoKCgpfp+zskqdfDAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjxf7ItfPAsKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoAAAAEAAAACAAAAABAAQAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AABI
        d3d4iAAAAERERERIREAAAEd3d4iIQAAASHRER0RAAABIdHSHQAAAAAR0RHhAAAAABHdIeEAAAAAEh0d0
        AAAABABH94QAAABPQE/4QAAAAE9E//dAAAAAT///h0AAAABP//hEdAAAAEf/hABHQAAAR3hAAARAAABI
        RAAAAAAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAA
        IAAAACAAAAAgAA==
</value>
  </data>
</root>